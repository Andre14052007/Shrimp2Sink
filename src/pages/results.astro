---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Resultados">
	<div class="hero">
		<div class="hero-content">
			<h1>Resultados da Investiga√ß√£o</h1>
			<p class="subtitle">Descobertas e avan√ßos do nosso projeto de filtra√ß√£o sustent√°vel</p>
		</div>
	</div>

	<div class="main-content">
		<section class="experimental-results">
			<div class="section-header">
				<h2>Resultados Experimentais</h2>
				<div class="section-line"></div>
			</div>
			<div class="results-grid">
				<div class="result-card">
					<div class="result-icon">‚öñÔ∏è</div>
					<h3>Massa Total</h3>
					<p>4 kg de camar√£o processado</p>
				</div>

				<div class="result-card">
					<div class="result-icon">ü¶ê</div>
					<h3>Cascas Obtidas</h3>
					<p>227 gramas de cascas de camar√£o</p>
				</div>

				<div class="result-card">
					<div class="result-icon">üìä</div>
					<h3>Taxa de Convers√£o</h3>
					<p>5,68% de convers√£o em massa</p>
				</div>
			</div>

			<div class="result-card full-width">
				<div class="result-icon">üìù</div>
				<h3>Conclus√£o</h3>
				<p>Esta experi√™ncia inicial forneceu-nos dados importantes sobre a propor√ß√£o de cascas de camar√£o dispon√≠veis, por quilograma de camar√£o, para o processo de filtra√ß√£o.</p>
			</div>

			<div class="result-card full-width">
				<div class="result-icon">üìà</div>
				<h3>Visualiza√ß√£o dos Dados</h3>
				<div class="calculator">
					<label for="shrimpMass">Massa de Camar√£o (kg):</label>
					<div class="input-group">
						<input type="number" id="shrimpMass" min="0" step="0.1" value="4">
						<button id="calculateBtn">Calcular</button>
					</div>
					<div class="result" id="calculationResult">
						Massa de Cascas Estimada: <span>227</span> gramas
					</div>
				</div>
				<div class="chart-container">
					<canvas id="conversionChart"></canvas>
				</div>
			</div>
		</section>

		<section class="results-section">
			<div class="section-header">
				<h2>Principais Descobertas</h2>
				<div class="section-line"></div>
			</div>

			<div class="results-grid">
				<div class="result-card">
					<div class="result-icon">üìä</div>
					<h3>Efic√°cia na Filtra√ß√£o</h3>
					<p>Em estudo</p>
				</div>

				<div class="result-card">
					<div class="result-icon">üî¨</div>
					<h3>An√°lise Qu√≠mica</h3>
					<p>Em estudo</p>
				</div>

				<div class="result-card">
					<div class="result-icon">‚ôªÔ∏è</div>
					<h3>Sustentabilidade</h3>
					<p>Em estudo</p>
				</div>
			</div>
		</section>

		<section class="methodology">
			<div class="section-header">
				<h2>Metodologia</h2>
				<div class="section-line"></div>
			</div>

			<div class="methodology-content">
				<div class="methodology-card">
					<h3>Processo de Pesquisa</h3>
					<ol class="process-list">
						<li>Colheita de cascas de camar√£o</li>
						<li>Extra√ß√£o da quitosana</li>
						<li>Prepara√ß√£o do filtro</li>
						<li>Testes de filtra√ß√£o</li>
						<li>An√°lise dos resultados</li>
					</ol>
				</div>
			</div>
		</section>

		<section class="cta-section">
			<div class="cta-content">
				<h2>Quer Saber Mais?</h2>
				<p>Acesse os nossos recursos e documenta√ß√£o completa do projeto.</p>
				<a href="/resources" class="button primary">Ver Recursos</a>
			</div>
		</section>
	</div>
</Layout>

<script>
	import Chart from 'chart.js/auto';

	document.addEventListener('DOMContentLoaded', () => {
		const ctx = document.getElementById('conversionChart');
		const conversionRate = 0.0568;
		
		// Calculate points for the line
		const points = [
			{ x: 0, y: 0 },
			{ x: 1000, y: 1000 * conversionRate },
			{ x: 2000, y: 2000 * conversionRate },
			{ x: 3000, y: 3000 * conversionRate },
			{ x: 4000, y: 4000 * conversionRate },
			{ x: 5000, y: 5000 * conversionRate }
		];

		const chart = new Chart(ctx, {
			type: 'scatter',
			data: {
				datasets: [
					{
						label: 'Linha de Convers√£o (5.68%)',
						data: points,
						showLine: true,
						fill: false,
						borderColor: 'rgba(54, 162, 235, 1)',
						backgroundColor: 'rgba(54, 162, 235, 0.8)',
						borderWidth: 2,
						tension: 0
					},
					{
						label: 'Dado Experimental',
						data: [{ x: 4000, y: 227 }],
						backgroundColor: 'rgba(255, 99, 132, 1)',
						pointRadius: 6
					},
					{
						label: 'C√°lculo Atual',
						data: [],
						backgroundColor: 'rgba(75, 192, 192, 1)',
						pointRadius: 6
					}
				]
			},
			options: {
				responsive: true,
				maintainAspectRatio: false,
				plugins: {
					title: {
						display: true,
						text: 'Rela√ß√£o Massa Total vs. Massa de Cascas',
						font: {
							size: 14
						}
					},
					legend: {
						position: 'bottom'
					}
				},
				scales: {
					x: {
						type: 'linear',
						position: 'bottom',
						title: {
							display: true,
							text: 'Massa Total de Camar√£o (g)'
						},
						min: 0,
						max: 5000
					},
					y: {
						beginAtZero: true,
						title: {
							display: true,
							text: 'Massa de Cascas (g)'
						},
						min: 0,
						max: 300
					}
				}
			}
		});

		// Calculator functionality
		const calculateBtn = document.getElementById('calculateBtn');
		const shrimpMassInput = document.getElementById('shrimpMass');
		const resultSpan = document.querySelector('#calculationResult span');

		function updateCalculation() {
			const massInKg = parseFloat(shrimpMassInput.value) || 0;
			const massInG = massInKg * 1000;
			const shellMass = massInG * conversionRate;
			
			resultSpan.textContent = Math.round(shellMass);

			// Update chart point
			chart.data.datasets[2].data = [{ x: massInG, y: shellMass }];
			chart.update();
		}

		calculateBtn.addEventListener('click', updateCalculation);
		shrimpMassInput.addEventListener('keypress', (e) => {
			if (e.key === 'Enter') {
				updateCalculation();
			}
		});

		// Initial calculation
		updateCalculation();
	});
</script>

<style>
	.hero {
		text-align: center;
		padding: 6rem 2rem;
		background: var(--gradient);
		margin: -2rem -2rem 2rem -2rem;
		border-radius: 16px 16px 0 0;
		color: rgb(var(--text-light));
		position: relative;
		overflow: hidden;
	}

	.hero::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(45deg, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 100%);
	}

	.hero-content {
		position: relative;
		z-index: 1;
		max-width: 800px;
		margin: 0 auto;
	}

	.hero h1 {
		font-size: 3rem;
		font-weight: 800;
		margin-bottom: 1.5rem;
		line-height: 1.2;
		color: rgb(var(--text-light));
	}

	.subtitle {
		font-size: 1.25rem;
		color: rgba(255,255,255,0.9);
		margin-bottom: 2rem;
		line-height: 1.6;
	}

	.main-content {
		max-width: var(--container-width);
		margin: 0 auto;
		padding: 2rem;
		background: white;
		border-radius: 16px;
	}

	.section-header {
		text-align: center;
		margin-bottom: 3rem;
	}

	.section-line {
		width: 60px;
		height: 4px;
		background: var(--gradient);
		margin: 1rem auto;
		border-radius: 2px;
	}

	.results-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 2rem;
		margin-top: 2rem;
	}

	.result-card {
		background: white;
		padding: 2.5rem;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		transition: var(--transition);
		text-align: center;
	}

	.result-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 8px 24px rgba(var(--primary), 0.15);
	}

	.result-card.full-width {
		grid-column: 1 / -1;
		margin-top: 2rem;
		display: flex;
		flex-direction: column;
		align-items: center;
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}

	.result-icon {
		font-size: 2.5rem;
		margin-bottom: 1.5rem;
	}

	.result-card h3 {
		color: rgb(var(--primary));
		margin-bottom: 1rem;
		font-size: 1.5rem;
	}

	.result-card p {
		color: rgb(var(--text));
		margin-bottom: 1.5rem;
		line-height: 1.6;
	}

	.metrics-list {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.metrics-list li {
		padding: 0.5rem 0;
		color: rgb(var(--text));
		opacity: 0.9;
		position: relative;
		padding-left: 1.5rem;
	}

	.metrics-list li::before {
		content: '‚Üí';
		position: absolute;
		left: 0;
		color: rgb(var(--primary));
	}

	.methodology {
		margin-bottom: 4rem;
	}

	.methodology-content {
		max-width: 800px;
		margin: 0 auto;
	}

	.methodology-card {
		background: white;
		padding: 2.5rem;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
	}

	.methodology-card h3 {
		color: rgb(var(--primary));
		margin-bottom: 1.5rem;
		font-size: 1.5rem;
		text-align: center;
	}

	.process-list {
		padding-left: 1.5rem;
		margin: 0;
	}

	.process-list li {
		color: rgb(var(--text));
		padding: 0.5rem 0;
		line-height: 1.6;
	}

	.experimental-results {
		margin-bottom: 4rem;
	}

	.cta-section {
		background: var(--gradient);
		padding: 4rem 2rem;
		text-align: center;
		color: rgb(var(--text-light));
		margin: 4rem -2rem -2rem -2rem;
		border-radius: 0 0 16px 16px;
	}

	.cta-content {
		max-width: 600px;
		margin: 0 auto;
	}

	.cta-content h2 {
		color: rgb(var(--text-light));
		margin-bottom: 1rem;
		font-size: 2rem;
	}

	.cta-content p {
		margin-bottom: 2rem;
		font-size: 1.1rem;
		opacity: 0.9;
	}

	.button {
		display: inline-block;
		padding: 0.8rem 1.5rem;
		border-radius: 8px;
		font-weight: 500;
		text-decoration: none;
		transition: var(--transition);
	}

	.button.primary {
		background: rgb(var(--text-light));
		color: rgb(var(--primary));
	}

	.button:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0,0,0,0.1);
	}

	.chart-container {
		width: 100%;
		height: 300px;
		margin: 1rem auto;
	}

	.calculator {
		width: 100%;
		margin: 1rem 0;
		padding: 1rem;
		background: rgba(var(--primary), 0.05);
		border-radius: 8px;
	}

	.calculator label {
		display: block;
		margin-bottom: 0.5rem;
		font-weight: 500;
	}

	.input-group {
		display: flex;
		gap: 0.5rem;
		margin-bottom: 1rem;
	}

	.input-group input {
		flex: 1;
		padding: 0.5rem;
		border: 1px solid rgba(var(--primary), 0.2);
		border-radius: 4px;
		font-size: 1rem;
	}

	.input-group button {
		padding: 0.5rem 1rem;
		background: rgb(var(--primary));
		color: white;
		border: none;
		border-radius: 4px;
		cursor: pointer;
		transition: var(--transition);
	}

	.input-group button:hover {
		background: rgba(var(--primary), 0.9);
	}

	.result {
		text-align: center;
		font-weight: 500;
	}

	.result span {
		color: rgb(var(--primary));
		font-size: 1.1em;
	}

	@media (max-width: 768px) {
		.hero {
			padding: 7rem 1rem 3rem 1rem;
			margin: -2rem -1rem 1rem -1rem;
		}

		.hero h1 {
			font-size: 2.25rem;
		}

		.subtitle {
			font-size: 1.1rem;
			margin-bottom: 1.5rem;
		}

		.main-content {
			padding: 1rem;
			margin: 1rem auto 3rem;
			border-radius: 12px;
		}

		.results-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
			padding: 0 1rem;
		}

		.result-card {
			padding: 1.5rem;
		}

		.result-card h3 {
			font-size: 1.25rem;
		}

		.button {
			padding: 0.7rem 1.2rem;
			font-size: 0.95rem;
		}

		.cta-section {
			margin: 2rem -1rem -1rem -1rem;
			padding: 3rem 1rem;
		}

		.cta-content h2 {
			font-size: 1.75rem;
		}

		.cta-content p {
			font-size: 1rem;
		}
	}
</style>