---
import Layout from '../../layouts/Layout.en.astro';
---

<Layout title="Results">
	<div class="hero">
		<div class="hero-content">
			<h1>Research Results</h1>
			<p class="subtitle">Discoveries and advancements of our sustainable filtration project</p>
		</div>
	</div>

	<div class="main-content">
		<section class="experimental-results">
			<div class="section-header">
				<h2>Experimental Results</h2>
				<div class="section-line"></div>
			</div>

			<div class="experiment-section">
				<h3 class="experiment-title">Shrimp Mass to Shell Mass Conversion Experiment</h3>
				
				<div class="methodology-card">
					<div class="result-icon">üìã</div>
					<h3>Methodology</h3>
					<div class="methodology-steps">
						<ol>
							<li>Initial weighing of whole shrimp 20/30</li>
							<li>Manual peeling of shrimp</li>
							<li>Separation of shells</li>
							<li>Weighing of obtained shells</li>
							<li>Calculation of conversion rate</li>
						</ol>
					</div>
				</div>

				<div class="results-grid">
					<div class="result-card">
						<div class="result-icon">‚öñÔ∏è</div>
						<h3>Total Mass</h3>
						<p>4 kg of shrimp 20/30</p>
					</div>

					<div class="result-card">
						<div class="result-icon">ü¶ê</div>
						<h3>Mass of Obtained Shells</h3>
						<p>227 grams of shrimp shells</p>
					</div>

					<div class="result-card">
						<div class="result-icon">üìä</div>
						<h3>Conversion Rate</h3>
						<p>5.68% mass conversion</p>
					</div>
				</div>

				<div class="graph-card">
					<div class="result-icon">üìà</div>
					<h3>Data Visualization</h3>
					<div class="graph-content">
						<div class="calculator">
							<label for="shrimpMass">Shrimp Mass (kg):</label>
							<div class="input-group">
								<input type="number" id="shrimpMass" min="0" step="0.1" value="4">
								<button id="calculateBtn">Calculate</button>
							</div>
							<div class="result" id="calculationResult">
								Estimated Shell Mass: <span>227</span> grams
							</div>
						</div>
						<div class="chart-container">
							<canvas id="conversionChart"></canvas>
						</div>
					</div>
				</div>
			</div>

			<div class="experiment-section">
				<h3 class="experiment-title">Shrimp Shell to Chitosan Conversion Experiment</h3>
				
				<div class="methodology-card">
					<div class="result-icon">üìã</div>
					<h3>Methodology</h3>
					<div class="methodology-steps">
						<ol>
							<li>Preparation of shrimp shells (cleaning, drying, and grinding)</li>
							<li>Demineralization with citric acid (C‚ÇÜH‚ÇàO‚Çá)</li>
							<li>Deproteinization with sodium hydroxide (NaOH)</li>
							<li>Deacetylation of chitin to obtain chitosan</li>
							<li>Weighing and analysis of the final product</li>
						</ol>
					</div>
				</div>

				<div class="results-grid">
					<div class="result-card">
						<div class="result-icon">‚öñÔ∏è</div>
						<h3>Initial Mass</h3>
						<p>15 grams of shrimp shells</p>
					</div>

					<div class="result-card">
						<div class="result-icon">üß™</div>
						<h3>Mass of Chitosan</h3>
						<p>3.57 grams of chitosan</p>
					</div>

					<div class="result-card">
						<div class="result-icon">üìä</div>
						<h3>Conversion Rate</h3>
						<p>23.8% mass conversion</p>
					</div>
				</div>

				<div class="graph-card">
					<div class="result-icon">üìà</div>
					<h3>Data Visualization</h3>
					<div class="graph-content">
						<div class="calculator">
							<label for="shellMass">Shell Mass (g):</label>
							<div class="input-group">
								<input type="number" id="shellMass" min="0" step="1" value="15">
								<button id="calculateChitosanBtn">Calculate</button>
							</div>
							<div class="result" id="chitosanCalculationResult">
								Estimated Chitosan Mass: <span>3.57</span> grams
							</div>
						</div>
						<div class="chart-container">
							<canvas id="chitosanConversionChart"></canvas>
						</div>
					</div>
				</div>
			</div>

			<div class="experiment-section">
				<h3 class="experiment-title">Experiment 3: Filtration Efficiency of Chitosan (LVX)</h3>
				
				<div class="methodology-card">
					<div class="result-icon">üìã</div>
					<h3>Methodology</h3>
					<div class="methodology-steps">
						<ol>
							<li>Creation of a reference curve for LVX concentration</li>
							<li>Preparation of an ideal LVX solution (5 ppm)</li>
							<li>Addition of chitosan as a filtration process</li>
							<li>Observation and comparison of the resulting curve after 5 minutes</li>
							<li>Calculation of efficiency</li>
						</ol>
					</div>
				</div>

				<div class="results-grid">
					<div class="result-card">
						<div class="result-icon">üíß</div>
						<h3>Initial Concentration</h3>
						<p>5 parts per million (ppm)</p>
					</div>

					<div class="result-card">
						<div class="result-icon">‚ú®</div>
						<h3>Final Concentration</h3>
						<p>1.6 parts per million</p>
					</div>

					<div class="result-card">
						<div class="result-icon">üìä</div>
						<h3>Efficiency</h3>
						<p>68% filtration in 5 minutes</p>
					</div>
				</div>

				<div class="graph-card">
					<div class="result-icon">üìà</div>
					<h3>Data Visualization</h3>
					<div class="graph-content">
						<div class="calculator">
							<label for="turbidityInput">Initial Concentration (PPM):</label>
							<div class="input-group">
								<input type="number" id="turbidityInput" min="0" step="0.1" value="10">
								<button id="calculateFiltrationBtn">Calculate</button>
							</div>
							<div class="result" id="filtrationCalculationResult">
								Estimated Final Concentration: <span>3.4</span> PPM
							</div>
						</div>
						<div class="chart-container">
							<canvas id="filtrationChart"></canvas>
						</div>
					</div>
				</div>
			</div>

			<div class="chart-container">
				<canvas id="filtrationChart"></canvas>
			</div>
		</section>

		<section class="cta-section">
			<div class="cta-content">
				<h2>Want to Know More?</h2>
				<p>Access our resources and complete project documentation.</p>
				<a href="/resources" class="button primary">View Resources</a>
			</div>
		</section>
	</div>
</Layout>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script is:inline>
  // Initialize all charts
  document.addEventListener('DOMContentLoaded', (event) => {
    initializeAllCharts();
  });

  // Initialize all charts
  function initializeAllCharts() {
	// First chart
	
	const ctx = document.getElementById('conversionChart');
	if (ctx) {
	  const conversionRate = 0.0568;
	  const points = [
		{ x: 0, y: 0 },
		{ x: 1000, y: 1000 * conversionRate },
		{ x: 2000, y: 2000 * conversionRate },
		{ x: 3000, y: 3000 * conversionRate },
		{ x: 4000, y: 4000 * conversionRate },
		{ x: 5000, y: 5000 * conversionRate }
	  ];

	  const chart = new Chart(ctx, {
		type: 'scatter',
		data: {
		  datasets: [
			{
			  label: 'Conversion Line (5.68%)',
			  data: points,
			  showLine: true,
			  fill: false,
			  borderColor: 'rgba(54, 162, 235, 1)',
			  backgroundColor: 'rgba(54, 162, 235, 0.8)',
			  borderWidth: 2,
			  tension: 0
			},
			{
			  label: 'Experimental Data',
			  data: [{ x: 4000, y: 227 }],
			  backgroundColor: 'rgba(255, 99, 132, 1)',
			  pointRadius: 6
			},
			{
			  label: 'Current Calculation',
			  data: [],
			  backgroundColor: 'rgba(75, 192, 192, 1)',
			  pointRadius: 6
			}
		  ]
		},
		options: {
		  responsive: true,
		  maintainAspectRatio: false,
		  plugins: {
			title: {
			  display: true,
			  text: 'Relation of Shrimp Mass vs. Shell Mass',
			  font: { size: 14 }
			},
			legend: { position: 'bottom' }
		  },
		  scales: {
			x: {
			  type: 'linear',
			  position: 'bottom',
			  title: {
				display: true,
				text: 'Shrimp Mass (g)'
			  },
			  min: 0,
			  max: 5000
			},
			y: {
			  beginAtZero: true,
			  title: {
				display: true,
				text: 'Shell Mass (g)'
			  },
			  min: 0,
			  max: 1000
			}
		  }
		}
	  });

	  // Calculator functionality
	  const calculateBtn = document.getElementById('calculateBtn');
	  const shrimpMassInput = document.getElementById('shrimpMass');
	  const resultSpan = document.querySelector('#calculationResult span');

	  function updateCalculation() {
		const massInKg = parseFloat(shrimpMassInput.value) || 0;
		const shellMass = massInKg * 1000 * conversionRate;
		resultSpan.textContent = Math.round(shellMass);
		chart.data.datasets[2].data = [{ x: massInKg * 1000, y: shellMass }];
		chart.update();
	  }

	  calculateBtn.addEventListener('click', updateCalculation);
	  shrimpMassInput.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') updateCalculation();
	  });
	  updateCalculation();
	}

	// Second chart
	
	const chitosanCtx = document.getElementById('chitosanConversionChart');
	if (chitosanCtx) {
	  const chitosanConversionRate = 0.238;
	  const chitosanPoints = [
		{ x: 0, y: 0 },
		{ x: 100, y: 100 * chitosanConversionRate },
		{ x: 200, y: 200 * chitosanConversionRate },
		{ x: 300, y: 300 * chitosanConversionRate },
		{ x: 400, y: 400 * chitosanConversionRate }
	   
	  ];

	  const chitosanChart = new Chart(chitosanCtx, {
		type: 'scatter',
		data: {
		  datasets: [
			{
			  label: 'Conversion Line (23.8%)',
			  data: chitosanPoints,
			  showLine: true,
			  fill: false,
			  borderColor: 'rgba(54, 162, 235, 1)',
			  backgroundColor: 'rgba(54, 162, 235, 0.8)',
			  borderWidth: 2,
			  tension: 0
			},
			{
			  label: 'Experimental Data',
			  data: [{ x: 15, y: 3 }],
			  backgroundColor: 'rgba(255, 99, 132, 1)',
			  pointRadius: 6
			},
			{
			  label: 'Current Calculation',
			  data: [],
			  backgroundColor: 'rgba(75, 192, 192, 1)',
			  pointRadius: 6
			}
		  ]
		},
		options: {
		  responsive: true,
		  maintainAspectRatio: false,
		  plugins: {
			title: {
			  display: true,
			  text: 'Relation of Shell Mass vs. Chitosan Mass',
			  font: { size: 14 }
			},
			legend: { position: 'bottom' }
		  },
		  scales: {
			x: {
			  type: 'linear',
			  position: 'bottom',
			  title: {
				display: true,
				text: 'Shell Mass (g)'
			  },
			  min: 0,
			  max: 500
			},
			y: {
			  beginAtZero: true,
			  title: {
				display: true,
				text: 'Chitosan Mass (g)'
			  },
			  min: 0,
			  max: 100
			}
		  }
		}
	  });

	  // Calculator functionality
	  const calculateChitosanBtn = document.getElementById('calculateChitosanBtn');
	  const shellMassInput = document.getElementById('shellMass');
	  const chitosanResultSpan = document.querySelector('#chitosanCalculationResult span');

	  function updateChitosanCalculation() {
		const massInG = parseFloat(shellMassInput.value) || 0;
		const chitosanMass = massInG * chitosanConversionRate;
		chitosanResultSpan.textContent = (chitosanMass);
		chitosanChart.data.datasets[2].data = [{ x: massInG, y: chitosanMass }];
		chitosanChart.update();
	  }

	  calculateChitosanBtn.addEventListener('click', updateChitosanCalculation);
	  shellMassInput.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') updateChitosanCalculation();
	  });
	  updateChitosanCalculation();
	}

	// Third chart
	const filtrationCtx = document.getElementById('filtrationChart');
	if (filtrationCtx) {
	  const filtrationConversionRate = 0.32;
	  const filtrationPoints = [
		{ x: 0, y: 0 },
		{ x: 50, y: 50 * filtrationConversionRate },
		{ x: 100, y: 100 * filtrationConversionRate },
		{ x: 200, y: 200 * filtrationConversionRate },
		{ x: 300, y: 300 * filtrationConversionRate }
	   
	  ];

	  const filtrationChart = new Chart(filtrationCtx, {
		type: 'scatter',
		data: {
		  datasets: [
			{
				label: 'Current Measurement',
			  data: [],
			  backgroundColor: 'rgba(75, 192, 192, 1)',
			  pointRadius: 6
			},
			{
				label: 'Experimental Data',
				data: [{ x: 5, y: 1.6 }],
				backgroundColor: 'rgba(255, 99, 132, 1)',
				pointRadius: 6
			},
			{
			  label: 'Filtration Line (68%)',
			  data: filtrationPoints,
			  showLine: true,
			  fill: false,
			  borderColor: 'rgba(54, 162, 235, 1)',
			  backgroundColor: 'rgba(54, 162, 235, 0.8)',
			  borderWidth: 2,
			  tension: 0
			}
		  ]
		},

		options: {
		  responsive: true,
		  maintainAspectRatio: false,
		  plugins: {
			title: {
			  display: true,
			  text: 'Relation of Initial Concentration vs. Final Concentration',
			  font: { size: 14 }
			},
			legend: { position: 'bottom' }
		  },
		  scales: {
			x: {
			  type: 'linear',
			  position: 'bottom',
			  title: {
				display: true,
				text: 'Initial Concentration (ppm)'
			  },
			  min: 0,
			  max: 300
			},
			y: {
			  beginAtZero: true,
			  title: {
				display: true,
				text: 'Final Concentration (ppm)'
			  },
			  min: 0,
			  suggestedMax: 300
			}
		  }
		}
	  });


	  // Calculator functionality
	  const calculateFiltrationBtn = document.getElementById('calculateFiltrationBtn');
	  const initialTurbidityInput = document.getElementById('turbidityInput');
	  const filtrationResultSpan = document.querySelector('#filtrationCalculationResult span');

	  function updateFiltrationCalculation() {
		const initialTurbidity = parseFloat(initialTurbidityInput.value) || 0;
		const finalTurbidity =  initialTurbidity * filtrationConversionRate;
		filtrationResultSpan.textContent = (finalTurbidity ) ;
		filtrationChart.data.datasets[0].data = [{ x: initialTurbidity, y: finalTurbidity }];
		filtrationChart.update();
	  }

	  calculateFiltrationBtn.addEventListener('click', updateFiltrationCalculation);
	  initialTurbidityInput.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') updateFiltrationCalculation();
	  });
	  updateFiltrationCalculation();
	}
  }

  // Initialize on page load
  if (document.readyState === 'loading') {
	document.addEventListener('DOMContentLoaded', (event) => {
		initializeAllCharts();
	});
  } else {
	initializeAllCharts();
  }

  // Re-initialize on Astro page transitions
  document.addEventListener('astro:page-load', (event) => {
	initializeAllCharts();
  });
  document.addEventListener('astro:after-swap', (event) => {
	initializeAllCharts();
  });
</script>

<style>
	.hero {
		text-align: center;
		padding: 6rem 2rem;
		background: var(--gradient);
		margin: -2rem -2rem 2rem -2rem;
		border-radius: 16px 16px 0 0;
		color: rgb(var(--text-light));
		position: relative;
		overflow: hidden;
	}

	.hero::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(45deg, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 100%);
	}

	.hero-content {
		position: relative;
		z-index: 1;
		max-width: 800px;
		margin: 0 auto;
	}

	.hero h1 {
		font-size: 3rem;
		font-weight: 800;
		margin-bottom: 1.5rem;
		line-height: 1.2;
		color: rgb(var(--text-light));
	}

	.subtitle {
		font-size: 1.25rem;
		color: rgba(255,255,255,0.9);
		margin-bottom: 0rem;
		line-height: 1.6;
	}

	.main-content {
		max-width: var(--container-width);
		margin: 0 auto;
		padding: 2rem;
		background: white;
		border-radius: 16px;
		margin-bottom: 0rem;
	}

	.section-header {
		text-align: center;
		margin-bottom: -7rem;
	}

	.section-line {
		width: 60px;
		height: 4px;
		background: var(--gradient);
		margin: 1rem auto;
		border-radius: 2px;
		margin-bottom: 0rem;
	}

	.results-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 1.5rem;
		margin-top: 2rem;
	}

	.result-card {
		background: white;
		padding: 1.5rem;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		transition: var(--transition);
		text-align: center;
	}

	.graph-card {
		background: white;
		padding: 2rem;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		transition: var(--transition);
		margin-top: 2rem;
		text-align: center;
	}

	.graph-content {
		display: flex;
		gap: 2rem;
		align-items: center;
		margin-top: 1rem;
		margin-bottom: 1rem;
	}

	.calculator {
		flex: 1;
		max-width: 300px;
	}

	.chart-container {
		flex: 2;
		height: 300px;
	}

	.experiment-section {
		background: rgba(var(--primary), 0.03);
		border-radius: 16px;
		padding: 2rem;
		margin-top: 10rem;
		margin-bottom: -9rem;
	}

	.experiment-title {
		color: rgb(var(--primary));
		font-size: 1.75rem;
		font-weight: 600;
		margin-bottom: 2rem;
		text-align: center;
	}

	.methodology-card {
		background: white;
		padding: 2rem;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		margin-bottom: 2rem;
		text-align: left;
		position: relative;
	}

	.methodology-card .result-icon {
		position: absolute;
		top: -1rem;
		left: 50%;
		transform: translateX(-50%);
		background: rgb(var(--primary));
		color: white;
		width: 3rem;
		height: 3rem;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 1.5rem;
	}

	.methodology-card h3 {
		color: rgb(var(--primary));
		margin-top: 1.5rem;
		margin-bottom: 1.5rem;
		font-size: 1.5rem;
		text-align: center;
	}

	.methodology-steps ol {
		padding-left: 1.5rem;
		margin: 0;
	}

	.methodology-steps li {
		margin-bottom: 1rem;
		line-height: 1.5;
		color: rgb(var(--text));
	}

	.methodology-steps li:last-child {
		margin-bottom: 0rem;
	}

	@media (max-width: 1200px) {
		.results-grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	@media (max-width: 768px) {
		.results-grid {
			grid-template-columns: 1fr;
		}

		.graph-content {
			flex-direction: column;
		}

		.calculator {
			max-width: 100%;
		}

		.chart-container {
			width: 100%;
		}
	}

	.metrics-list {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.metrics-list li {
		padding: 0.5rem 0;
		color: rgb(var(--text));
		opacity: 0.9;
		position: relative;
		padding-left: 1.5rem;
	}

	.metrics-list li::before {
		content: '‚Üí';
		position: absolute;
		left: 0;
		color: rgb(var(--primary));
	}

	.experimental-results {
		margin-bottom: -9rem;
	}

	.cta-section {
		background: var(--gradient);
		padding: 4rem 2rem;
		text-align: center;
		color: rgb(var(--text-light));
		margin: 4rem -2rem -2rem -2rem;
		border-radius: 0 0 16px 16px;
	}

	.cta-content {
		max-width: 600px;
		margin: 0 auto;
		margin-top: 0rem;
	}

	.cta-content h2 {
		color: rgb(var(--text-light));
		margin-bottom: 1rem;
		font-size: 2rem;
	}

	.cta-content p {
		margin-bottom: 2rem;
		font-size: 1.1rem;
		opacity: 0.9;
	}

	.button {
		display: inline-block;
		padding: 0.8rem 1.5rem;
		border-radius: 8px;
		font-weight: 500;
		text-decoration: none;
		transition: var(--transition);
	}

	.button.primary {
		background: rgb(var(--text-light));
		color: rgb(var(--primary));
	}

	.button:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0,0,0,0.1);
	}

	.result-icon {
		font-size: 2.5rem;
		margin-bottom: 1.5rem;
	}

	.result-card h3 {
		color: rgb(var(--primary));
		margin-bottom: 1rem;
		font-size: 1.5rem;
	}

	.result-card p {
		color: rgb(var(--text));
		margin-bottom: 1.5rem;
		line-height: 1.6;
	}

	@media (max-width: 768px) {
		.hero {
			padding: 7rem 1rem 3rem 1rem;
			margin: -2rem -1rem 1rem -1rem;
		}

		.hero h1 {
			font-size: 2.25rem;
		}

		.subtitle {
			font-size: 1.1rem;
			margin-bottom: 1.5rem;
		}

		.main-content {
			padding: 1rem;
			margin: 1rem auto 3rem;
			border-radius: 12px;
		}

		.button {
			padding: 0.7rem 1.2rem;
			font-size: 0.95rem;
		}

		.cta-section {
			margin: 2rem -1rem -1rem -1rem;
			padding: 3rem 1rem;
		}

		.cta-content h2 {
			font-size: 1.75rem;
		}

		.cta-content p {
			font-size: 1rem;
		}
	}
</style>